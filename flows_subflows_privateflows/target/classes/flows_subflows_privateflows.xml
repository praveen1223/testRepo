<?xml version="1.0" encoding="UTF-8"?>
<mule
xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:file="http://www.mulesoft.org/schema/mule/file"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
xmlns:http="http://www.mulesoft.org/schema/mule/http"
xmlns="http://www.mulesoft.org/schema/mule/core"
xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
xmlns:spring="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd">
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
<flow name="subFlow">
<http:listener config-ref="HTTP_Listener_Configuration" path="/hello" doc:name="HTTP" allowedMethods="GET"/>
<flow-ref name="subflow1" doc:name="subflow1"/>
<flow-ref name="subflow2" doc:name="subflow2"/>
        <flow-ref name="subflow3" doc:name="Flow Reference"/>
<logger level="INFO" doc:name="Logger" message="Name: #[message.outboundProperties.qpname] Type: #[flowVars.qptype] Color: #[sessionVars.color]"/>
<catch-exception-strategy doc:name="Catch Exception Strategy">
<set-payload value="Error while processing the message" doc:name="Set Payload"/>
</catch-exception-strategy>
</flow>
    <flow name="subflow3">
        <set-payload value="#[message.payload]" doc:name="Set Payload"/>
        <logger message="gfhgfhgc" level="INFO" doc:name="Logger"/>
    </flow>
<sub-flow name="subflow1">
<set-payload value="#['Hello World'.toUpperCase()]" doc:name="Set Payload"/>
<set-property propertyName="qpname" value="#[message.inboundProperties.'http.query.params'.name]" doc:name="Property"/>
        <file:outbound-endpoint path="src/test/resources/synch" outputPattern="#[server.dateTime.format(dd-MM-YYYY)]" responseTimeout="10000" doc:name="File"/>
</sub-flow>
<sub-flow name="subflow2">
<set-variable variableName="qptype" value="#[message.inboundProperties.'http.query.params'.type]" doc:name="Variable"/>
<set-session-variable variableName="color" value="gray" doc:name="Session Variable"/>
</sub-flow>







<flow name="Synchronous_exampleFlow">
<http:listener config-ref="HTTP_Listener_Configuration" path="/synch" doc:name="HTTP" allowedMethods="GET"/>
<logger level="INFO" doc:name="Logger"/>
<flow-ref name="Synchronous_exampleFlow1" doc:name="FlowReference"/>
        <set-payload value="befor synch flow" doc:name="Set Payload"/>
<catch-exception-strategy doc:name="Catch Exception Strategy">
<set-payload value="Error while processing the message" doc:name="Set Payload"/>
</catch-exception-strategy>
</flow>
<flow name="Synchronous_exampleFlow1">
<set-variable variableName="code" value="#[message.inboundProperties.'http.query.params'.code]" doc:name="Variable"/>
<file:outbound-endpoint path="src/test/resources/synch" responseTimeout="10000" doc:name="File"/>
</flow>









<flow name="Asynchronous_exampleFlow">
<http:listener config-ref="HTTP_Listener_Configuration" path="/asynch" doc:name="HTTP" allowedMethods="GET"/>
<logger level="INFO" doc:name="Logger"/>
<async doc:name="Async">
<flow-ref name="Asynchronous_exampleFlow1" doc:name="FlowReference"/>
</async>
        <set-payload value="before hello mule" doc:name="Set Payload"/>
        
 <catch-exception-strategy doc:name="Catch Exception Strategy">
<set-payload value="Error while processing the message" doc:name="Set Payload"/>
</catch-exception-strategy>       
</flow>
<flow name="Asynchronous_exampleFlow1">
<set-payload doc:name="Set Payload" value="hello mule"/>
<file:outbound-endpoint path="src/test/resources/asynch" responseTimeout="10000" doc:name="File" outputPattern="#[server.dateTime.format(dd-MM-YYYY)]"/>
</flow>



</mule>